name: CMake for linux flatpak

on:
  release:
    types: [published]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. 
      # Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm ]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: ubuntu-22.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-22.04-arm
            c_compiler: gcc
            cpp_compiler: g++

    steps:
    - uses: actions/checkout@v4

    - name: Get Machine Model info
      id: machine-model
      run: |
        uname -a
        model=`uname -m`
        echo "model=$model" >> $GITHUB_OUTPUT
        release=`lsb_release -r -s 2>/dev/null`
        echo "release=$release" >> $GITHUB_OUTPUT
        distro=`lsb_release -s -i 2>/dev/null`
        echo "distro=$distro" >> $GITHUB_OUTPUT

    - name: Remove man-db update
      run: |
        sudo rm -f /var/lib/man-db/auto-update

    - name: Test model and release
      run: |
        echo "model  : ${{ steps.machine-model.outputs.model }}"
        echo "distro : ${{ steps.machine-model.outputs.distro }}"
        echo "release: ${{ steps.machine-model.outputs.release }}"

    - name: Install Requirements
      run: |
        sudo apt-get update -q 
        sudo apt-get install -y -q libgtk-3-dev
        sudo apt-get install -y -q flatpak-builder flatpak

    - name: Make flatpak
      run: make flatpak

    - name: Display build directory
      run: |
        ls -l ./flatpak

    - name: Upload Flatpak
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file:  ./flatpak/webui-wire.flatpak
        asset_name: webui-wire-${{ github.event.release.tag_name }}-linux-${{ steps.machine-model.outputs.release }}-${{ steps.machine-model.outputs.model }}.flatpak
        overwrite: true

