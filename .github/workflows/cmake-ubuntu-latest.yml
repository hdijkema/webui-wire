# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  release:
    types: [published]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. 
      # Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        #os: [ubuntu-latest, ubuntu-22.04, ubuntu-24.04-arm, ubuntu-22.04-arm ]
        os: [ubuntu-latest ]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
              #- os: ubuntu-22.04
              #c_compiler: gcc
              #cpp_compiler: g++
              #- os: ubuntu-22.04-arm
              #c_compiler: gcc
              #cpp_compiler: g++
              #- os: ubuntu-24.04-arm
              #c_compiler: gcc
              #cpp_compiler: g++

    steps:
    - uses: actions/checkout@v4
      id: machine-model
      shell: bash
    - run: |
        uname -a
        model=`uname -m`
        echo "model=$model" >> $GITHUB_OUTPUT
        release=`lsb_release -r -s 2>/dev/null`
        echo "release=$release" >> $GITHUB_OUTPUT

    - name: Remove man-db update
      run: |
        sudo rm -f /var/lib/man-db/auto-update

    - name: Test model and release
      run: |
        echo "model  : ${{ steps.machine-model.outputs.model }}"
        echo "release: ${{ steps.machine-model.outputs.release }}"

          #- name: Install Requirements
          #run: |
        #sudo apt-get update -q 
        #sudo apt-get install -y -q libgtk-3-dev

          #- name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      #run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

          #- name: Build
      # Build your program with the given configuration
      #run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Display
      run: |
        ls -l ./build

        #- name: Upload
        ## Upload this release to the latest release
        #uses: svenstaro/upload-release-action@v2
        #with:
        #repo_token: ${{ secrets.GITHUB_TOKEN }}
        #file:  ./build/webui-wire
        #asset_name: webui-wire-${{ github.event.release.tag_name }}-linux-ubuntu-${{ steps.machine-model.outputs.release }}-${{ steps.machine-model.outputs.model }}
        #overwrite: true


